name: mediprep
services:
    mediprep-zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: mediprep-zookeeper
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 2181:2181

    mediprep-kafka:
        image: confluentinc/cp-kafka:latest
        container_name: mediprep-kafka
        restart: always
        depends_on:
            - mediprep-zookeeper
        ports:
            - 29092:29092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: mediprep-zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://mediprep-kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    mediprep-redis:
        image: redis:latest
        container_name: mediprep-redis
        restart: always
        ports:
            - "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass 1234
        environment:
            - REDIS_REPLICATION_MODE=master
            - REDIS_PASSWORD=1234
        volumes:
            - redis:/data
    mediprep-postgresql:
        hostname: 127.0.0.1
        image: ankane/pgvector
        container_name: mediprep-postgres
        ports:
            - "5432:5432"
        restart: always
        environment:
            - POSTGRES_DB=mediprep
            - POSTGRES_USER=mediprep
            - POSTGRES_PASSWORD=password
        volumes:
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
    redis:
        driver: local
